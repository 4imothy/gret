name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get the release version from the tag
        if: env.VERSION == ''
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Check that tag version and Cargo.toml version are the same
        shell: bash
        run: |
          if ! grep -q "version = \"$VERSION\"" Cargo.toml; then
            echo "version does not match Cargo.toml" >&2
            exit 1
          fi
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create $VERSION --draft --verify-tag --title $VERSION
    outputs:
      version: ${{ env.VERSION }}

  release:
    name: build release
    needs: ['create-release']
    env:
      CARGO: cargo
    strategy:
      fail-fast: true
      matrix:
        job:
          - target: "x86_64-unknown-linux-musl"
            exe: "amd64-linux"
            os: "ubuntu-latest"
          - target: "aarch64-unknown-linux-musl"
            exe: "aarch64-linux"
          - target: "x86_64-apple-darwin"
            exe: "amd64-macos"
            os: "macos-latest"
          - target: "x86_64-pc-windows-msvc"
            exe: "windows.exe"
            os: "windows-latest"
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.job.target }}

      - name: Use Cross
        if: matrix.os == 'ubuntu-latest' && matrix.target != ''
        shell: bash
        run: |
          dir="$RUNNER_TEMP/cross-download"
          mkdir "$dir"
          echo "$dir" >> $GITHUB_PATH
          cd "$dir"
          curl -LO "https://github.com/cross-rs/cross/releases/download/$CROSS_VERSION/cross-x86_64-unknown-linux-musl.tar.gz"
          tar xf cross-x86_64-unknown-linux-musl.tar.gz
          echo "CARGO=cross" >> $GITHUB_ENV

      - name: Build binary
        shell: bash
        run: |
          ${{ env.CARGO }} build --target ${{ matrix.target }} --locked --release
          rm target/${{ matrix.job.target }}/release/gret.d
          cp target/${{ matrix.job.target }}/release/gret* gret-${{ matrix.job.exe }}
          bin="target/${{ matrix.target }}/release/gret-${{ matrix.job-exe }}"
          echo "BIN=$bin" >> $GITHUB_ENV

      - name: Upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          version="${{ needs.create-release.outputs.version }}"
          gh release upload "$version" ${{ env.BIN }}

